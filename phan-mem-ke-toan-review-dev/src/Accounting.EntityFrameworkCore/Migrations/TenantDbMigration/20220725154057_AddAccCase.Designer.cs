// <auto-generated />
using System;
using Accounting.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Volo.Abp.EntityFrameworkCore;
using Volo.Abp.MultiTenancy;

#nullable disable

namespace Accounting.Migrations.TenantDbMigration
{
    [DbContext(typeof(TenancyDbContext))]
    [Migration("20220725154057_AddAccCase")]
    partial class AddAccCase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.PostgreSql)
                .HasAnnotation("_Abp_MultiTenancySide", MultiTenancySides.Tenant)
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Accounting.Categories.Accounts.AccOpeningBalance", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AccSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("CreditCum")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("CreditCumCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("CreditCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("DebitCum")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("DebitCumCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("DebitCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "AccCode", "AccSectionCode", "ContractCode", "CurrencyCode", "PartnerCode", "WorkPlaceCode", "Year")
                        .IsUnique();

                    b.ToTable("AccOpeningBalance", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Accounts.AccountSystem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AccName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("AccNameEn")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("AccNameTemp")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("AccNameTempE")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("AccPattern")
                        .HasColumnType("integer");

                    b.Property<int>("AccRank")
                        .HasColumnType("integer");

                    b.Property<string>("AccSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AccType")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("AssetOrEquity")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("AttachAccSection")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachContract")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachCurrency")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachPartner")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachProductCost")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachVoucher")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachWorkPlace")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("BankName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("IsBalanceSheetAcc")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ParentAccId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "AccCode")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "AccCode"), new[] { "AccName", "AccNameEn", "AccRank", "AttachPartner", "AttachAccSection", "AttachContract", "AttachCurrency", "AttachProductCost", "AttachVoucher", "AttachWorkPlace" });

                    b.ToTable("AccountSystem", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Accounts.ProductOpeningBalance", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("PriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "ProductCode", "ProductLotCode", "ProductOriginCode", "WarehouseCode", "Year")
                        .IsUnique();

                    b.ToTable("ProductOpeningBalance", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Accounts.VoucherCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AttachBusiness")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachPartnerPrice")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("BookClosingDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("BusinessBeginningDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("BusinessEndingDate")
                        .HasColumnType("date");

                    b.Property<string>("ChkDuplicateVoucherNumber")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("IncreaseNumberMethod")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("IsAssembly")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("IsCalculateBalanceAcc")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("IsCalculateBalanceProduct")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("IsSavingLedger")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("IsSavingWarehouseBook")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("IsTransfer")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("NameE")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("PriceCalculatingMethod")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("SeparatorCharacter")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("TaxType")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<int>("VoucherGroup")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherKind")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("VoucherOrd")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("VoucherType")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    b.ToTable("VoucherCategory", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.OrgUnits.OrgUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("CareerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ChiefAccountant")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("NameE")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Producer")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Signee")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SubmittingAddress")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("SubmittingOrganiztion")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TaxAuthorityCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxAuthorityName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("Wards")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("Code"), new[] { "Name", "NameE", "TaxCode" });

                    b.ToTable("OrgUnit", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Others.AccCase", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("CaseType")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Code"), new[] { "Name", "CaseType" });

                    b.ToTable("AccCase", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Others.AccSection", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AttachProductCost")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("SectionType")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Code"), new[] { "Name", "SectionType" });

                    b.ToTable("AccSection", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Others.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Default")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<bool>("ExchangeMethod")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime?>("ExchangeRateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("NameE")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Others.Warehouse", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("NameTemp")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ParentWarehouseId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("WarehouseAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("WarehouseRank")
                        .HasColumnType("integer");

                    b.Property<string>("WarehouseType")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Code"), new[] { "Name", "NameTemp", "ParentWarehouseId", "WarehouseAcc", "WarehouseRank", "WarehouseType" });

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Partners.AccPartner", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("DebtCeiling")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("DebtCeilingCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("InfoFilter")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceSearchLink")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("OtherContact")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PartnerGroupId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<int>("PartnerType")
                        .HasMaxLength(250)
                        .HasColumnType("integer");

                    b.Property<string>("Representative")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Code"), new[] { "Name", "TaxCode", "PartnerGroupId", "PartnerType" });

                    b.ToTable("AccPartner", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Partners.BankPartner", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("BankAccNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("BankPartner", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Products.FProductWork", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<DateTime>("BeginningDate")
                        .HasColumnType("date");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("EndingDate")
                        .HasColumnType("date");

                    b.Property<string>("FPWType")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("FProductOrWork")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("NameTemp")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("WorkOwner")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    b.ToTable("FProductWork", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Products.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AttachProductLot")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachProductOrigin")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("AttachWorkPlace")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CareerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DiscountAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("ExciseTaxCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("ExciseTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("ImportTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("MaxQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal>("MinQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<decimal>("PITPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("ProductAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductCostAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductGroupCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductionPeriodCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("RevenueAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SaleReturnsAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Specification")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("VatPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Code")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Code"), new[] { "Name", "ProductGroupCode", "ProductAcc", "ProductCostAcc", "RevenueAcc", "SaleReturnsAcc" });

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Products.ProductPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("PurchasePriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("SalePriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Products.ProductUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("numeric(22,8)");

                    b.Property<bool>("IsBasicUnit")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("PurchasePriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal>("SalePriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductUnit", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.AccTaxDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountWithoutVat")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountWithoutVatCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CheckDuplicate")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ClearingContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingFProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingPartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingWorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("CreditExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("DebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DebitExchangerate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceGroup")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("InvoiceLink")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("InvoiceSymbol")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NoteE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("RecordingVoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SecurityNo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("date");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccVoucherId");

                    b.HasIndex("ProductVoucherId");

                    b.HasIndex("OrgCode", "AccVoucherId");

                    b.HasIndex("OrgCode", "ProductVoucherId");

                    b.ToTable("AccTaxDetail", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.AccVoucher", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccType")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("BankName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("BankNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("BusinessAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("BusinessCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<string>("DebitOrCredit")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("OriginVoucher")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("PartnerCode0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PaymentTermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Representative")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("TotalAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("TotalAmountVat")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("TotalAmountVatCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("TotalAmountWithouVat")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("TotalAmountWithouVatCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("date");

                    b.Property<int>("VoucherGroup")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "Year", "VoucherCode", "VoucherGroup", "VoucherDate", "VoucherNumber");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "Year", "VoucherCode", "VoucherGroup", "VoucherDate", "VoucherNumber"), new[] { "PartnerCode0", "PartnerName0", "DebitOrCredit", "CurrencyCode", "ExchangeRate" });

                    b.ToTable("AccVoucher", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.AccVoucherDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("AccVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingFProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingPartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingWorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("CreditExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("DebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DebitExchageRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("RecordingVoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccVoucherId");

                    b.HasIndex("OrgCode", "AccVoucherId");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "AccVoucherId"), new[] { "Ord0" });

                    b.ToTable("AccVoucherDetail", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.Ledger", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("BusinessAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("BusinessCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CheckDuplicate")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("CheckDuplicate0")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ClearingContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingFProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingPartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ClearingSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("CreditAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CreditContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CreditCurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("CreditExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("CreditFProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CreditPartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CreditSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CreditWorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("Days")
                        .HasColumnType("integer");

                    b.Property<string>("DebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DebitAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("DebitContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitCurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DebitExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("DebitFProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitOrCredit")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("DebitPartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitSectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitWorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DescriptionE")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceNbr")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("InvoicePartnerAddress")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("InvoicePartnerName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("InvoiceSymbol")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NoteE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Ord0Extra")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("OriginVoucher")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerCode0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PaymentTermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("PromotionQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("RecordingVoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Representative")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SalesChannelCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SecurityNo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("TransWarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("TrxPromotionQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("TrxQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("date");

                    b.Property<int>("VoucherGroup")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("VoucherId"), new[] { "Ord0", "VoucherCode", "VoucherDate", "VoucherGroup", "Year", "OrgCode" });

                    b.ToTable("Ledger", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucher", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("BillNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BusinessAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("BusinessCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CommandNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitOrCredit")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("DescriptionE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("DevaluationPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("ExportDate")
                        .HasColumnType("date");

                    b.Property<string>("ExportNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("date");

                    b.Property<string>("InfoFilter")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsCreatedEInvoice")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("OriginVoucher")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("OtherDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PartnerCode0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PaymentTermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PaymentTermsId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Place")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("PriceCreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PriceDebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PriceDecreasingDescription")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int?>("RefType")
                        .HasColumnType("integer");

                    b.Property<string>("Representative")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SalesChannelCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalAmountWithoutVat")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalAmountWithoutVatCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalDevaluationAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalDevaluationAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalDiscountAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalDiscountAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExciseTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExciseTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmount0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmount1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmountCur0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalExpenseAmountCur1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalImportTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalImportTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalProductAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalProductAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("TotalVatAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalVatAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Vehicle")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("date");

                    b.Property<int>("VoucherGroup")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrgCode", "VoucherCode", "VoucherGroup", "VoucherDate", "Year");

                    b.ToTable("ProductVoucher", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherAssembly", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("AssemblyProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AssemblyProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AssemblyUnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AssemblyWarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("AssemblyWorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("ProductVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal?>("TrxQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherId")
                        .IsUnique();

                    b.ToTable("ProductVoucherAssembly", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("Amount2")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountAfterDecrease")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur2")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountWithVat")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CreditAcc2")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitAcc2")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DecreaseAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DecreasePercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("DevaluationAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DevaluationAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DevaluationPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("DevaluationPrice")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DevaluationPriceCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("FixedPrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("HTPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<DateTime?>("InsuranceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NoteE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductVoucherDetailId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("ProductVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("RefId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("RevenueAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("TransProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransUnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransWarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("TrxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TrxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TrxQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("VarianceAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatPrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("VatPriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("VatTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherId");

                    b.HasIndex("OrgCode", "ProductVoucherDetailId");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("OrgCode", "ProductVoucherDetailId"), new[] { "Ord0" });

                    b.ToTable("ProductVoucherDetail", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherDetailReceipt", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DiscountAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("ExciseTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExciseTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExciseTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("ExpenseAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmount0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmount1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmountCur0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmountCur1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ProductVoucherDetailId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherDetailId");

                    b.HasIndex("OrgCode", "ProductVoucherDetailId");

                    b.ToTable("ProductVoucherDetailReceipt", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherReceipt", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("DiscountAmount0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DiscountAmountCur0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("DiscountCreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DiscountCreditAcc0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DiscountDebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DiscountDebitAcc0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DiscountDescription")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("DiscountDescription0")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("ExciseTaxCreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ExciseTaxDebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ExciseTaxDescription")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("ExciseTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<string>("ImportCreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ImportDebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ImportDescription")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("ImportTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ProductVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherId")
                        .IsUnique();

                    b.ToTable("ProductVoucherReceipt", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherVat", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("BuyerBankNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("InvoiceSerial")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("InvoiceSymbol")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ProductVoucherId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("SellerBankNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TaxCategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<string>("VatAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("VatPartnerName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("VatProductName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherId")
                        .IsUnique();

                    b.ToTable("ProductVoucherVat", (string)null);
                });

            modelBuilder.Entity("Accounting.Vouchers.WarehouseBook", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("Amount2")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("AmountCur2")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("BillNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("BusinessAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("BusinessCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("CalculateTransfering")
                        .HasColumnType("boolean");

                    b.Property<string>("CaseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CreditAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("CreditAcc2")
                        .HasMaxLength(30)
                        .HasColumnType("numeric");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("DebitAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("DebitAcc2")
                        .HasMaxLength(30)
                        .HasColumnType("numeric");

                    b.Property<string>("DebitOrCredit")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("DescriptionE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("DevaluationAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DevaluationAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DevaluationPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("DevaluationPrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("DevaluationPriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DiscountAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("ExciseTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExciseTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExciseTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("ExpenseAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmount0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmount1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmountCur0")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExpenseAmountCur1")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("ExportAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("ExportAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExportAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ExportQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("ExprenseAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("FProductWorkCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("FixedPrice")
                        .HasColumnType("boolean");

                    b.Property<string>("ImportAcc")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("ImportAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("ImportTaxAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportTaxAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("ImportTaxPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("InvoicePartnerAddress")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("InvoicePartnerName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("InvoiceSymbol")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastModifierName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NoteE")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Ord0")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Ord0Extra")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("OriginVoucher")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PartnerCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PartnerCode0")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PaymentTermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Place")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal?>("Price0")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur0")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("PriceCur2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductName0")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ProductVoucherId")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("QuantityCur")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("Representative")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SalesChannelCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid")
                        .HasColumnName("TenantId");

                    b.Property<decimal?>("TotalAmount2")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("TotalDiscountAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("TransProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransProductLotCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransProductOriginCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransWarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TransferingUnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("TrxExportQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("TrxImportQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<decimal?>("TrxPrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("TrxPrice2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("TrxPriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("TrxPriceCur2")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("TrxQuantity")
                        .HasColumnType("numeric(12,8)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("VarianceAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatAmountCur")
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("numeric(12,4)");

                    b.Property<decimal?>("VatPrice")
                        .HasColumnType("numeric(22,8)");

                    b.Property<decimal?>("VatPriceCur")
                        .HasColumnType("numeric(22,8)");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("date");

                    b.Property<int>("VoucherGroup")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WorkPlaceCode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductVoucherId");

                    NpgsqlIndexBuilderExtensions.IncludeProperties(b.HasIndex("ProductVoucherId"), new[] { "OrgCode", "Ord0", "VoucherCode", "VoucherGroup", "VoucherDate", "VoucherNumber" });

                    b.ToTable("WarehouseBook", (string)null);
                });

            modelBuilder.Entity("Accounting.Categories.Partners.BankPartner", b =>
                {
                    b.HasOne("Accounting.Categories.Partners.AccPartner", "AccPartner")
                        .WithMany("BankPartners")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BankPartner_AccPartner");

                    b.Navigation("AccPartner");
                });

            modelBuilder.Entity("Accounting.Categories.Products.ProductPrice", b =>
                {
                    b.HasOne("Accounting.Categories.Products.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductPrice_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Accounting.Categories.Products.ProductUnit", b =>
                {
                    b.HasOne("Accounting.Categories.Products.Product", "Product")
                        .WithMany("ProductUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductUnit_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Accounting.Vouchers.AccTaxDetail", b =>
                {
                    b.HasOne("Accounting.Vouchers.AccVoucher", "AccVoucher")
                        .WithMany("AccTaxDetails")
                        .HasForeignKey("AccVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccTaxDetail_AccVoucher");

                    b.HasOne("Accounting.Vouchers.ProductVoucher", "ProductVoucher")
                        .WithMany("AccTaxDetails")
                        .HasForeignKey("ProductVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccTaxDetail_ProductVoucher");

                    b.Navigation("AccVoucher");

                    b.Navigation("ProductVoucher");
                });

            modelBuilder.Entity("Accounting.Vouchers.AccVoucherDetail", b =>
                {
                    b.HasOne("Accounting.Vouchers.AccVoucher", "AccVoucher")
                        .WithMany("AccVoucherDetails")
                        .HasForeignKey("AccVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccVoucherDetail_AccVoucher");

                    b.Navigation("AccVoucher");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherAssembly", b =>
                {
                    b.HasOne("Accounting.Vouchers.ProductVoucher", "ProductVoucher")
                        .WithMany("ProductVoucherAssemblies")
                        .HasForeignKey("ProductVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductVoucherAssembly_ProductVoucher");

                    b.Navigation("ProductVoucher");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherDetail", b =>
                {
                    b.HasOne("Accounting.Vouchers.ProductVoucher", "ProductVoucher")
                        .WithMany("ProductVoucherDetails")
                        .HasForeignKey("ProductVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductVoucherDetail_ProductVoucher");

                    b.Navigation("ProductVoucher");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherDetailReceipt", b =>
                {
                    b.HasOne("Accounting.Vouchers.ProductVoucherDetail", "ProductVoucherDetail")
                        .WithMany("ProductVoucherDetailReceipts")
                        .HasForeignKey("ProductVoucherDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductVoucherDetailReceipt_ProductVoucherDetail");

                    b.Navigation("ProductVoucherDetail");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherReceipt", b =>
                {
                    b.HasOne("Accounting.Vouchers.ProductVoucher", "ProductVoucher")
                        .WithMany("ProductVoucherReceipts")
                        .HasForeignKey("ProductVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductVoucherReceipt_ProductVoucher");

                    b.Navigation("ProductVoucher");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherVat", b =>
                {
                    b.HasOne("Accounting.Vouchers.ProductVoucher", "ProductVoucher")
                        .WithMany("ProductVoucherVats")
                        .HasForeignKey("ProductVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductVoucherVat_ProductVoucher");

                    b.Navigation("ProductVoucher");
                });

            modelBuilder.Entity("Accounting.Categories.Partners.AccPartner", b =>
                {
                    b.Navigation("BankPartners");
                });

            modelBuilder.Entity("Accounting.Categories.Products.Product", b =>
                {
                    b.Navigation("ProductPrices");

                    b.Navigation("ProductUnits");
                });

            modelBuilder.Entity("Accounting.Vouchers.AccVoucher", b =>
                {
                    b.Navigation("AccTaxDetails");

                    b.Navigation("AccVoucherDetails");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucher", b =>
                {
                    b.Navigation("AccTaxDetails");

                    b.Navigation("ProductVoucherAssemblies");

                    b.Navigation("ProductVoucherDetails");

                    b.Navigation("ProductVoucherReceipts");

                    b.Navigation("ProductVoucherVats");
                });

            modelBuilder.Entity("Accounting.Vouchers.ProductVoucherDetail", b =>
                {
                    b.Navigation("ProductVoucherDetailReceipts");
                });
#pragma warning restore 612, 618
        }
    }
}
